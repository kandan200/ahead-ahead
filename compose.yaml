# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

name: ahead
services:
  mysql:
    image: mysql:8.0
    volumes:
      type: volume
      source: ahead-data
      target: /var/lib/mysql

    cpu_count: 2
    cpu_percent: 70
    container_name: mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: ahead_db
    network_mode: "service:server"

  server:
    build: .
#    image: kandan200/ahead-ahead
    ports:
      - '8000:8000'
    volumes:
      - .:/app:rw #for cloud deployment, avoid relative paths
#      type: bind
#      source: .
#      target: /app
    depends_on:
      - mysql
    develop:
          watch:
            - action: rebuild
              path: requirements.txt

            - action: sync
              path:
              target: /app/docApp/
    depends_on:
      mysql:
        restart: true
        condition: service_healthy    
    links:
      - mysql
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
#    user:


#    labels:
#      com.example.description: "Research data management webapp"
#      com.example.department: "Research"

#    env_file:
#      - fileName

#volumes:
#  ahead-data:
#    driver: local
